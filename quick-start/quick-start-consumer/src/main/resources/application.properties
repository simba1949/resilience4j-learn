server.port=8001
spring.application.name=quick-start-consumer

# consul 配置
## 指定 consul 服务地址
spring.cloud.consul.host=192.168.0.100
spring.cloud.consul.port=8500
## 使用 IP 地址注册
spring.cloud.consul.discovery.prefer-ip-address=true

## 开启断路器功能
spring.cloud.openfeign.circuitbreaker.enabled=true
## 断路器分组启用
spring.cloud.openfeign.circuitbreaker.group.enabled=true

# resilience4j 配置
### 基于 COUNT_BASED 配置
### 设置 50% 的失败率时候开启熔断
#resilience4j.circuitbreaker.configs.deault.failure-rate-threshold=50
### 设置滑动窗口类型，默认是 COUNT_BASED，详见枚举：io.github.resilience4j.circuitbreaker.CircuitBreakerConfig.SlidingWindowType
#resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
### 滑动窗口的大小配置，COUNT_BASED 表示6个请求，TIME_BASED 表示6秒
#resilience4j.circuitbreaker.configs.default.sliding-window-size=6
### 每个滑动窗口周期断路器计算失败之前所需要的最小样本数
#resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=6
### 是否启用自动从开启状态过渡到半开状态，默认为true
#resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
### 从 OPEN 到 HALF_OF_OPEN 状态需要等待的时间
#resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
### 半开状态下允许的最大调用次数
#resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
#resilience4j.circuitbreaker.configs.default.record-exceptions[0]=java.lang.Exception

## 基于 TIME_BASED 配置
## 设置 50% 的失败率时候开启熔断
#resilience4j.circuitbreaker.configs.deault.failure-rate-threshold=50
### 设置滑动窗口类型，默认是 COUNT_BASED，详见枚举：io.github.resilience4j.circuitbreaker.CircuitBreakerConfig.SlidingWindowType
#resilience4j.circuitbreaker.configs.default.sliding-window-type=TIME_BASED
### 滑动窗口的大小配置，COUNT_BASED 表示2个请求，TIME_BASED 表示2秒
#resilience4j.circuitbreaker.configs.default.sliding-window-size=2
### 慢调用时间阈值，高于这个阈值的视为慢调用并增加慢调用比例。
#resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold=2s
### 调用百分比峰值，断路器把调用时间大于 slow-call-rate-threshold，视为慢调用，
#resilience4j.circuitbreaker.configs.default.slow-call-rate-threshold=30
### 每个滑动窗口周期断路器计算失败之前所需要的最小样本数
#resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=2
### 半开状态下允许的最大调用次数
#resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
## 从 OPEN 到 HALF_OF_OPEN 状态需要等待的时间
#resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
#resilience4j.circuitbreaker.configs.default.record-exceptions[0]=java.lang.Exception
## 指定服务的配置
#resilience4j.circuitbreaker.instances.quick-start-provider.base-config=default

## bulkhead 配置
## 使用了信号量
## 允许并发线程执行的最大数量
#resilience4j.bulkhead.configs.default.max-concurrent-calls=2
### 并发调用数量时，新的线程的阻塞时间，我只愿意等待1秒，过时不候进舱壁兜底faLLback
#resilience4j.bulkhead.configs.default.max-wait-duration=1s
### 服务使用基础配置
#resilience4j.bulkhead.instances.quick-start-provider.base-config=default

## 使用了有界队列和固定大小线程池
resilience4j.thread-pool-bulkhead.configs.default.core-thread-pool-size=1
resilience4j.thread-pool-bulkhead.configs.default.max-thread-pool-size=1
resilience4j.thread-pool-bulkhead.configs.default.queue-capacity=1
resilience4j.thread-pool-bulkhead.instances.quick-start-provider.base-config=default